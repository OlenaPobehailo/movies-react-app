{"version":3,"file":"static/js/952.f00844bb.chunk.js","mappings":"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","sources":["webpack://movies-react-app/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","utils/calculateUserScore.js","webpack://movies-react-app/./src/pages/MovieDetailPage.module.css?d74d","pages/MovieDetailPage.jsx","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__dMFrI\"};","import { PropagateLoader } from 'react-spinners';\r\n\r\nimport React from 'react';\r\nimport css from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={css.loader}>\r\n      <PropagateLoader color=\"#ff0000\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","\r\nconst calculateUserScore = (vote_average, vote_count) => {\r\n    const VOTE_COUNT_WEIGHT = 5;\r\n    if (isNaN(vote_average) || isNaN(vote_count)) {\r\n      throw new Error('Invalid voting');\r\n    }\r\n\r\n    if (vote_count === 0) {\r\n      return 0;\r\n    }\r\n\r\n    const rating = vote_average * 10;\r\n    const percent = vote_count === 0 ? 0 : (vote_count / 10) * 10;\r\n    const userScore = (rating * vote_count + VOTE_COUNT_WEIGHT * percent) / vote_count;\r\n    return userScore.toFixed(1);\r\n  };\r\n\r\n  export default calculateUserScore;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailPage_container__aviN+\",\"poster\":\"MovieDetailPage_poster__i7wMc\",\"info\":\"MovieDetailPage_info__Iv6fd\",\"title\":\"MovieDetailPage_title__6MKqK\",\"subtitle\":\"MovieDetailPage_subtitle__OZk3V\",\"text\":\"MovieDetailPage_text__sp5NA\",\"link\":\"MovieDetailPage_link__w9Zsn\",\"backLink\":\"MovieDetailPage_backLink__ZSfc1 MovieDetailPage_link__w9Zsn\"};","import React from 'react';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport { basePosterUrl } from '../services/api';\r\nimport calculateUserScore from '../utils/calculateUserScore';\r\nimport css from './MovieDetailPage.module.css';\r\n\r\nconst MovieDetailPage = ({\r\n  movie,\r\n  id,\r\n  showCast,\r\n  showReviews,\r\n  handleCastClick,\r\n  handleReviewsClick,\r\n  backLinkRef,\r\n  location,\r\n}) => {\r\n  const { title, vote_average, vote_count, overview, genres, poster_path, release_date } = movie;\r\n\r\n  const genreList = genres.map(genre => genre.name).join(', ');\r\n\r\n  const posterPath = poster_path ? basePosterUrl + poster_path : null;\r\n  const year = new Date(release_date).getFullYear();\r\n\r\n  return (\r\n    <>\r\n      <Link to={backLinkRef} className={css.backLink}>\r\n        Back\r\n      </Link>\r\n\r\n      <div className={css.container}>\r\n        <img className={css.poster} src={posterPath} alt={title} />\r\n\r\n        <div className={css.info}>\r\n          <h2 className={css.title}>\r\n            {title} ({year})\r\n          </h2>\r\n          <p className={css.text}>User score: {calculateUserScore(vote_average, vote_count)} %</p>\r\n          <h3 className={css.subtitle}>Overview</h3>\r\n          <p className={css.text}>{overview ? overview : 'no information available'}</p>\r\n          <h3 className={css.subtitle}>Genres</h3>\r\n          <p className={css.text}>{genreList ? genreList : 'no information available'}</p>\r\n        </div>\r\n      </div>\r\n      <div className={css.additionalInfo}>\r\n        <Link\r\n          className={css.link}\r\n          to={`/movies/${id}/cast`}\r\n          onClick={handleCastClick}\r\n          state={{ from: location.state?.from }}\r\n        >\r\n          Cast\r\n        </Link>\r\n        <Link\r\n          className={css.link}\r\n          to={`/movies/${id}/reviews`}\r\n          onClick={handleReviewsClick}\r\n          state={{ from: location.state?.from }}\r\n        >\r\n          Reviews\r\n        </Link>\r\n\r\n        {showCast && <Outlet />}\r\n        {showReviews && <Outlet />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { getMovieById } from '../../services/api';\r\nimport MovieDetailPage from '../../pages/MovieDetailPage';\r\nimport Loader from '../Loader/Loader';\r\n\r\nconst MovieDetails = () => {\r\n  const [movie, setMovie] = useState(null);\r\n  const [showCast, setShowCast] = useState(false);\r\n  const [showReviews, setShowReviews] = useState(false);\r\n  const location = useLocation();\r\n  const { id } = useParams();\r\n\r\n  const backLinkRef = location.state?.from ?? '/movies';\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      const data = await getMovieById(id);\r\n      setMovie(data);\r\n    };\r\n\r\n    fetchMovie();\r\n  }, [id]);\r\n\r\n  if (!movie) {\r\n    return <Loader />;\r\n  }\r\n\r\n  console.log(movie);\r\n\r\n  const handleCastClick = () => {\r\n    setShowCast(prev => !prev);\r\n    setShowReviews(false);\r\n  };\r\n  const handleReviewsClick = () => {\r\n    setShowReviews(prev => !prev);\r\n    setShowCast(false);\r\n  };\r\n\r\n  return (\r\n    <MovieDetailPage\r\n      movie={movie}\r\n      id={id}\r\n      showCast={showCast}\r\n      showReviews={showReviews}\r\n      handleCastClick={handleCastClick}\r\n      handleReviewsClick={handleReviewsClick}\r\n      location={location}\r\n      backLinkRef={backLinkRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '9ce8efc3ff8d8ed00ad4e59e8fd58805';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\naxios.defaults.params = { api_key: API_KEY };\r\n\r\nexport const basePosterUrl = 'https://image.tmdb.org/t/p/w500';\r\n\r\nexport const getTrendingMovies = async () => {\r\n  const response = await axios.get(`/trending/movie/day`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const getMoviesByQuery = async query => {\r\n  const response = await axios.get(`/search/movie?query=${query}`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const getMovieById = async id => {\r\n  const response = await axios.get(\r\n    `/movie/${id}\r\n        `\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\n\r\nexport const getCast = async (id) => {\r\n  const response = await axios.get(`/movie/${id}/credits`)\r\n  // console.log(response.data.cast)\r\n\r\n  return response.data;\r\n}\r\n\r\nexport const getReviews = async (id) => {\r\n  const response = await axios.get(`/movie/${id}/reviews`)\r\n  console.log(response.data.cast)\r\n\r\n  return response.data;\r\n}\r\n"],"names":["_jsx","className","css","children","PropagateLoader","color","vote_average","vote_count","isNaN","Error","toFixed","_ref","_location$state","_location$state2","movie","id","showCast","showReviews","handleCastClick","handleReviewsClick","backLinkRef","location","title","overview","genres","poster_path","release_date","genreList","map","genre","name","join","posterPath","basePosterUrl","year","Date","getFullYear","_jsxs","_Fragment","Link","to","src","alt","calculateUserScore","concat","onClick","state","from","Outlet","_location$state$from","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","setShowCast","_useState5","_useState6","setShowReviews","useLocation","useParams","useEffect","fetchMovie","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMovieById","sent","stop","apply","arguments","Loader","console","log","MovieDetailPage","axios","api_key","getTrendingMovies","response","abrupt","results","getMoviesByQuery","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","getCast","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","cast","_x4"],"sourceRoot":""}